{"ast":null,"code":"const getBlogs = async () => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nconst getBlogById = async blogId => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    const result = blogsApiData.data.find(x => x.id == blogId ? x : null);\n    return result;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nconst getBlogsByCategoryId = async categoryId => {\n  if (!categoryId) {\n    return getBlogs();\n  }\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let blogsApiData = await data.json();\n    return blogsApiData.data.filter(x => categoryId !== undefined ? x.categories.find(y => y.id.toString() === categoryId.toString()) : x);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nconst blogService = {\n  getBlogs,\n  getBlogsByCategoryId,\n  getBlogById\n};\nexport default blogService;","map":{"version":3,"names":["getBlogs","data","fetch","method","headers","blogsApiData","json","err","Error","getBlogById","blogId","result","find","x","id","getBlogsByCategoryId","categoryId","filter","undefined","categories","y","toString","blogService"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/iX/html-css-js/blog-app/Frontend/src/services/blogService.js"],"sourcesContent":["\r\nconst getBlogs = async () => {\r\n\r\n    try {\r\n        const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", \r\n            { \r\n                method: \"GET\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        const blogsApiData = await data.json();\r\n        return blogsApiData.data;\r\n    } catch (err) {\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\nconst getBlogById = async (blogId) => {\r\n\r\n    try {\r\n        const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", \r\n            { \r\n                method: \"GET\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        const blogsApiData = await data.json();\r\n        const result = blogsApiData.data.find((x) => x.id == blogId ? x : null);\r\n        return result;\r\n    } catch (err) {\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\n\r\nconst getBlogsByCategoryId = async (categoryId) => {\r\n\r\n    if (!categoryId) {\r\n        return getBlogs();\r\n    }\r\n\r\n    try {\r\n        const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", \r\n            { \r\n                method: \"GET\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        let blogsApiData = await data.json();\r\n        return (\r\n            blogsApiData.data.filter((x) => \r\n                categoryId !== undefined ?\r\n                x.categories.find((y) => y.id.toString() === categoryId.toString()) \r\n                : x\r\n            )\r\n        );\r\n    } catch (err) {\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\n\r\nconst blogService = {\r\n    getBlogs, getBlogsByCategoryId, getBlogById\r\n}\r\n\r\nexport default blogService;"],"mappings":"AACA,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAEzB,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,0DAA0D,EAC/E;MACIC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,MAAMC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACtC,OAAOD,YAAY,CAACJ,IAAI;EAC5B,CAAC,CAAC,OAAOM,GAAG,EAAE;IACV,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAED,MAAME,WAAW,GAAG,MAAOC,MAAM,IAAK;EAElC,IAAI;IACA,MAAMT,IAAI,GAAG,MAAMC,KAAK,CAAC,0DAA0D,EAC/E;MACIC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,MAAMC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACtC,MAAMK,MAAM,GAAGN,YAAY,CAACJ,IAAI,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,IAAIJ,MAAM,GAAGG,CAAC,GAAG,IAAI,CAAC;IACvE,OAAOF,MAAM;EACjB,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACV,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAGD,MAAMQ,oBAAoB,GAAG,MAAOC,UAAU,IAAK;EAE/C,IAAI,CAACA,UAAU,EAAE;IACb,OAAOhB,QAAQ,CAAC,CAAC;EACrB;EAEA,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,0DAA0D,EAC/E;MACIC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,IAAIC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACpC,OACID,YAAY,CAACJ,IAAI,CAACgB,MAAM,CAAEJ,CAAC,IACvBG,UAAU,KAAKE,SAAS,GACxBL,CAAC,CAACM,UAAU,CAACP,IAAI,CAAEQ,CAAC,IAAKA,CAAC,CAACN,EAAE,CAACO,QAAQ,CAAC,CAAC,KAAKL,UAAU,CAACK,QAAQ,CAAC,CAAC,CAAC,GACjER,CACN,CAAC;EAET,CAAC,CAAC,OAAON,GAAG,EAAE;IACV,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAGD,MAAMe,WAAW,GAAG;EAChBtB,QAAQ;EAAEe,oBAAoB;EAAEN;AACpC,CAAC;AAED,eAAea,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\OneDrive - stevens.edu\\\\Documents\\\\GitHub\\\\iX\\\\html-css-js\\\\blog-app\\\\Frontend\\\\src\\\\pages\\\\Blogs\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"../../components/Navbar\";\nimport Heading from \"../../components/Heading\";\nimport BlogList from \"../../components/BlogList\";\nimport Footer from \"../../components/Footer\";\nimport CategoriesList from \"../../components/CategoriesList\";\nimport \"../../App.css\";\nimport \"./index.css\";\n\n// Week 1: Import the blogPosts and categories from the dummy-data.json file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = require(\"../../dummy-data.json\");\nlet blogPostsData = data.blogPosts;\nconst categoriesData = data.categories;\nexport default function BlogsPage() {\n  _s();\n  const [categoryId, setCategoryId] = useState(undefined);\n  const [blogs, setBlogs] = useState(blogPostsData);\n  const [displayBlogs, setDisplayBlogs] = useState(blogPostsData);\n  const {\n    categoryIdPassed\n  } = useParams();\n  blogPostsData = blogPostsData.filter(x => categoryIdPassed !== undefined ? x.categories.find(y => y.id.toString() === categoryIdPassed) : true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-menu\",\n        children: /*#__PURE__*/_jsxDEV(CategoriesList, {\n          categoriesData: categoriesData,\n          categoryId: categoryId,\n          setCategoryId: setCategoryId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"page-subtitle\",\n          children: \"Blog Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        blogPosts: blogs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BlogsPage, \"yiFiwTbUzKebUuPSpvviyxJzW9I=\", false, function () {\n  return [useParams];\n});\n_c = BlogsPage;\nvar _c;\n$RefreshReg$(_c, \"BlogsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Navbar","Heading","BlogList","Footer","CategoriesList","jsxDEV","_jsxDEV","Fragment","_Fragment","data","require","blogPostsData","blogPosts","categoriesData","categories","BlogsPage","_s","categoryId","setCategoryId","undefined","blogs","setBlogs","displayBlogs","setDisplayBlogs","categoryIdPassed","filter","x","find","y","id","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/iX/html-css-js/blog-app/Frontend/src/pages/Blogs/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Heading from \"../../components/Heading\";\r\nimport BlogList from \"../../components/BlogList\";\r\nimport Footer from \"../../components/Footer\";\r\nimport CategoriesList from \"../../components/CategoriesList\";\r\n\r\n\r\nimport \"../../App.css\";\r\nimport \"./index.css\";\r\n\r\n\r\n// Week 1: Import the blogPosts and categories from the dummy-data.json file\r\nconst data = require(\"../../dummy-data.json\");\r\nlet blogPostsData = data.blogPosts;\r\nconst categoriesData = data.categories;\r\n\r\nexport default function BlogsPage() {\r\n\r\n  const [categoryId, setCategoryId] = useState(undefined);\r\n  const [blogs, setBlogs] = useState(blogPostsData);\r\n  const [displayBlogs, setDisplayBlogs] = useState(blogPostsData);\r\n  \r\n  const { categoryIdPassed } = useParams();\r\n\r\n  blogPostsData = blogPostsData.filter((x) =>\r\n    categoryIdPassed !== undefined\r\n      ? x.categories.find((y) => y.id.toString() === categoryIdPassed)\r\n    : true\r\n  );\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Heading />\r\n        <div className=\"scroll-menu\">\r\n          <CategoriesList \r\n              categoriesData={categoriesData} \r\n              categoryId={categoryId}\r\n              setCategoryId={setCategoryId}>\r\n          </CategoriesList>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <p className=\"page-subtitle\">Blog Posts</p>\r\n        </div>\r\n        <BlogList blogPosts={blogs} />\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
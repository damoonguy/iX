{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\OneDrive - stevens.edu\\\\Documents\\\\GitHub\\\\iX\\\\html-css-js\\\\blog-app\\\\Frontend\\\\src\\\\pages\\\\Blogs\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"../../components/Navbar\";\nimport Heading from \"../../components/Heading\";\nimport BlogList from \"../../components/BlogList\";\nimport Footer from \"../../components/Footer\";\nimport \"../../App.css\";\nimport \"./index.css\";\nimport categoriesService from \"../../services/categoriesService\";\nimport blogService from \"../../services/blogService\";\n\n// Week 1: Import the blogPosts and categories from the dummy-data.json file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BlogsPage() {\n  _s();\n  const nav = useNavigate();\n  let {\n    categoryIdPassed\n  } = useParams();\n  const [blogs, setBlogs] = useState(blogService.getBlogs());\n  const [categoriesData, setCategories] = useState(categoriesService.getCategories());\n  const categories = categoriesData;\n  const allBlogs = blogs;\n  console.log(categories);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const cats = await categoriesService.getCategories();\n        setCategories(cats);\n      } catch (err) {\n        throw new Error(err);\n      }\n    };\n    const fetchBlogsByCategoryId = async categoryIdPassed => {\n      try {\n        const blogsRes = await blogService.getBlogsByCategoryId(categoryIdPassed);\n        setBlogs(blogsRes);\n      } catch (err) {\n        throw new Error(err);\n      }\n    };\n    fetchBlogsByCategoryId();\n    fetchCategories();\n  }, []);\n\n  // useEffect(() => {\n  //   const catBlogs = blogs.filter((x) =>\n  //     categoryIdPassed !== undefined\n  //       ? x.categories.find((y) => y.id.toString() === categoryIdPassed.toString())\n  //       : allBlogs\n  //   );\n  //   setBlogs(() => catBlogs);\n  // }, [categoryIdPassed])\n\n  const CategoriesList = ({\n    categoryId\n  }) => {\n    return categories.map(category => {\n      return categoryId === category.id.toString() ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nav(\"/blogs/\" + category.id);\n        },\n        style: {\n          color: \"blue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.title\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nav(\"/blogs/\" + category.id);\n        },\n        style: {\n          color: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.title\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-menu\",\n        children: /*#__PURE__*/_jsxDEV(CategoriesList, {\n          categoriesData: categories.PromiseResult,\n          categoryId: categoryIdPassed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"page-subtitle\",\n          children: \"Blog Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        blogPosts: blogs.PromiseResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BlogsPage, \"p3t7e+FttbmOXOHh+0Rqp49bSNw=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = BlogsPage;\nvar _c;\n$RefreshReg$(_c, \"BlogsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Navbar","Heading","BlogList","Footer","categoriesService","blogService","jsxDEV","_jsxDEV","Fragment","_Fragment","BlogsPage","_s","nav","categoryIdPassed","blogs","setBlogs","getBlogs","categoriesData","setCategories","getCategories","categories","allBlogs","console","log","fetchCategories","cats","err","Error","fetchBlogsByCategoryId","blogsRes","getBlogsByCategoryId","CategoriesList","categoryId","map","category","id","toString","onClick","style","color","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","PromiseResult","display","justifyContent","blogPosts","_c","$RefreshReg$"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/iX/html-css-js/blog-app/Frontend/src/pages/Blogs/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Heading from \"../../components/Heading\";\r\nimport BlogList from \"../../components/BlogList\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./index.css\";\r\nimport categoriesService from \"../../services/categoriesService\";\r\nimport blogService from \"../../services/blogService\";\r\n\r\n\r\n// Week 1: Import the blogPosts and categories from the dummy-data.json file\r\n\r\n\r\nexport default function BlogsPage() {\r\n\r\n  const nav = useNavigate();\r\n\r\n  let { categoryIdPassed } = useParams();\r\n  const [blogs, setBlogs] = useState(blogService.getBlogs());\r\n  const [ categoriesData, setCategories] = useState(categoriesService.getCategories());\r\n\r\n  const categories = categoriesData;\r\n  const allBlogs = blogs;\r\n\r\n  \r\n\r\n  console.log(categories);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const cats = await categoriesService.getCategories();\r\n        setCategories(cats);\r\n      } catch (err) {\r\n        throw new Error(err);\r\n      }\r\n    }\r\n\r\n    const fetchBlogsByCategoryId = async (categoryIdPassed) => {\r\n      try {\r\n        const blogsRes = await blogService.getBlogsByCategoryId(categoryIdPassed);\r\n        setBlogs(blogsRes);\r\n      } catch (err) {\r\n        throw new Error(err);\r\n      }\r\n    }\r\n    fetchBlogsByCategoryId();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const catBlogs = blogs.filter((x) =>\r\n  //     categoryIdPassed !== undefined\r\n  //       ? x.categories.find((y) => y.id.toString() === categoryIdPassed.toString())\r\n  //       : allBlogs\r\n  //   );\r\n  //   setBlogs(() => catBlogs);\r\n  // }, [categoryIdPassed])\r\n\r\n  const CategoriesList = ({categoryId}) => {\r\n    return categories.map((category) => {\r\n      return categoryId === category.id.toString() ? (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => {nav(\"/blogs/\" + category.id)}}\r\n          style={{ color: \"blue\" }}\r\n        >\r\n          <p key={category.id}>{category.title}</p>\r\n        </button>\r\n      ) : (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => {nav(\"/blogs/\" + category.id)}}\r\n          style={{ color: \"black\" }}\r\n        >\r\n          <p key={category.id}>{category.title}</p>\r\n        </button>\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Heading />\r\n        <div className=\"scroll-menu\">\r\n          <CategoriesList \r\n              categoriesData={categories.PromiseResult} \r\n              categoryId={categoryIdPassed}\r\n              >\r\n          </CategoriesList>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <p className=\"page-subtitle\">Blog Posts</p>\r\n        </div>\r\n        <BlogList blogPosts={blogs.PromiseResult} />\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const getBlogs = async () => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nconst getBlogsByCategoryId = async categoryId => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let blogsApiData = await data.json();\n    return blogsApiData.data.filter(x => x.categories.id === categoryId ? x : false);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nconst blogService = {\n  getBlogs,\n  getBlogsByCategoryId\n};\nexport default blogService;","map":{"version":3,"names":["getBlogs","data","fetch","method","headers","blogsApiData","json","err","Error","getBlogsByCategoryId","categoryId","filter","x","categories","id","blogService"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/iX/html-css-js/blog-app/Frontend/src/services/blogService.js"],"sourcesContent":["\r\nconst getBlogs = async () => {\r\n\r\n    try {\r\n        const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", \r\n            { \r\n                method: \"GET\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        const blogsApiData = await data.json();\r\n        return blogsApiData.data;\r\n    } catch (err) {\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\nconst getBlogsByCategoryId = async (categoryId) => {\r\n\r\n    try {\r\n        const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", \r\n            { \r\n                method: \"GET\", \r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }\r\n        );\r\n        let blogsApiData = await data.json();\r\n        return (\r\n            blogsApiData.data.filter((x) => \r\n                x.categories.id === categoryId ? \r\n                x : false\r\n            )\r\n        );\r\n    } catch (err) {\r\n        throw new Error(err);\r\n    }\r\n};\r\n\r\n\r\nconst blogService = {\r\n    getBlogs, getBlogsByCategoryId\r\n}\r\n\r\nexport default blogService;"],"mappings":"AACA,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAEzB,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,0DAA0D,EAC/E;MACIC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,MAAMC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACtC,OAAOD,YAAY,CAACJ,IAAI;EAC5B,CAAC,CAAC,OAAOM,GAAG,EAAE;IACV,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAED,MAAME,oBAAoB,GAAG,MAAOC,UAAU,IAAK;EAE/C,IAAI;IACA,MAAMT,IAAI,GAAG,MAAMC,KAAK,CAAC,0DAA0D,EAC/E;MACIC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,IAAIC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACpC,OACID,YAAY,CAACJ,IAAI,CAACU,MAAM,CAAEC,CAAC,IACvBA,CAAC,CAACC,UAAU,CAACC,EAAE,KAAKJ,UAAU,GAC9BE,CAAC,GAAG,KACR,CAAC;EAET,CAAC,CAAC,OAAOL,GAAG,EAAE;IACV,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;EACxB;AACJ,CAAC;AAGD,MAAMQ,WAAW,GAAG;EAChBf,QAAQ;EAAES;AACd,CAAC;AAED,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
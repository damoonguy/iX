{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\OneDrive - stevens.edu\\\\Documents\\\\GitHub\\\\iX\\\\html-css-js\\\\blog-app\\\\Frontend\\\\src\\\\pages\\\\Blogs\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"../../components/Navbar\";\nimport Heading from \"../../components/Heading\";\nimport BlogList from \"../../components/BlogList\";\nimport Footer from \"../../components/Footer\";\nimport \"../../App.css\";\nimport \"./index.css\";\nimport categoriesService from \"../../services/categoriesService\";\nimport blogService from \"../../services/blogService\";\n\n// Week 1: Import the blogPosts and categories from the dummy-data.json file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BlogsPage() {\n  _s();\n  const nav = useNavigate();\n  let {\n    categoryIdPassed\n  } = useParams();\n  const [blogsData, setBlogs] = useState();\n  const [categoriesData, setCategories] = useState(null);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const cats = await categoriesService.getCategories().then(() => setCategories(cats));\n      } catch (err) {\n        throw new Error(err);\n      }\n    };\n    const fetchBlogsByCategoryId = async categoryIdPassed => {\n      try {\n        const blogsRes = await blogService.getBlogsByCategoryId(categoryIdPassed).then(() => setBlogs(blogsRes));\n      } catch (err) {\n        throw new Error(err);\n      }\n    };\n    fetchBlogsByCategoryId(categoryIdPassed);\n    fetchCategories();\n  }, []);\n  const categories = JSON.stringify(categoriesData, null, 2);\n  const blogs = JSON.stringify(blogsData);\n  console.log(categories, blogs);\n\n  // useEffect(() => {\n  //   const catBlogs = blogs.filter((x) =>\n  //     categoryIdPassed !== undefined\n  //       ? x.categories.find((y) => y.id.toString() === categoryIdPassed.toString())\n  //       : allBlogs\n  //   );\n  //   setBlogs(() => catBlogs);\n  // }, [categoryIdPassed])\n\n  const CategoriesList = ({\n    categoryId\n  }) => {\n    return categories.map(category => {\n      return categoryId === category.id.toString() ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nav(\"/blogs/\" + category.id);\n        },\n        style: {\n          color: \"blue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.title\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nav(\"/blogs/\" + category.id);\n        },\n        style: {\n          color: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.title\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-menu\",\n        children: /*#__PURE__*/_jsxDEV(CategoriesList, {\n          categoriesData: categories,\n          categoryId: categoryIdPassed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"page-subtitle\",\n          children: \"Blog Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        blogPosts: blogs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BlogsPage, \"6SkD5fMW2mvDWD76Bf4/Y0VYDGM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = BlogsPage;\nvar _c;\n$RefreshReg$(_c, \"BlogsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Navbar","Heading","BlogList","Footer","categoriesService","blogService","jsxDEV","_jsxDEV","Fragment","_Fragment","BlogsPage","_s","nav","categoryIdPassed","blogsData","setBlogs","categoriesData","setCategories","fetchCategories","cats","getCategories","then","err","Error","fetchBlogsByCategoryId","blogsRes","getBlogsByCategoryId","categories","JSON","stringify","blogs","console","log","CategoriesList","categoryId","map","category","id","toString","onClick","style","color","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","display","justifyContent","blogPosts","_c","$RefreshReg$"],"sources":["C:/Users/Michael/OneDrive - stevens.edu/Documents/GitHub/iX/html-css-js/blog-app/Frontend/src/pages/Blogs/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Heading from \"../../components/Heading\";\r\nimport BlogList from \"../../components/BlogList\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./index.css\";\r\nimport categoriesService from \"../../services/categoriesService\";\r\nimport blogService from \"../../services/blogService\";\r\n\r\n\r\n// Week 1: Import the blogPosts and categories from the dummy-data.json file\r\n\r\n\r\nexport default function BlogsPage() {\r\n\r\n  const nav = useNavigate();\r\n\r\n  let { categoryIdPassed } = useParams();\r\n  const [ blogsData, setBlogs] = useState();\r\n  const [ categoriesData, setCategories] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const cats = await categoriesService.getCategories().then(() => setCategories(cats));\r\n        \r\n      } catch (err) {\r\n        throw new Error(err);\r\n      }\r\n    }\r\n\r\n    const fetchBlogsByCategoryId = async (categoryIdPassed) => {\r\n      try {\r\n        const blogsRes = await blogService.getBlogsByCategoryId(categoryIdPassed).then(() => setBlogs(blogsRes));\r\n        \r\n      } catch (err) {\r\n        throw new Error(err);\r\n      }\r\n    }\r\n    fetchBlogsByCategoryId(categoryIdPassed);\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const categories = JSON.stringify(categoriesData, null, 2);\r\n  const blogs = JSON.stringify(blogsData);\r\n\r\n  console.log(categories, blogs);\r\n\r\n  // useEffect(() => {\r\n  //   const catBlogs = blogs.filter((x) =>\r\n  //     categoryIdPassed !== undefined\r\n  //       ? x.categories.find((y) => y.id.toString() === categoryIdPassed.toString())\r\n  //       : allBlogs\r\n  //   );\r\n  //   setBlogs(() => catBlogs);\r\n  // }, [categoryIdPassed])\r\n\r\n  const CategoriesList = ({categoryId}) => {\r\n    return categories.map((category) => {\r\n      return categoryId === category.id.toString() ? (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => {nav(\"/blogs/\" + category.id)}}\r\n          style={{ color: \"blue\" }}\r\n        >\r\n          <p key={category.id}>{category.title}</p>\r\n        </button>\r\n      ) : (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => {nav(\"/blogs/\" + category.id)}}\r\n          style={{ color: \"black\" }}\r\n        >\r\n          <p key={category.id}>{category.title}</p>\r\n        </button>\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Heading />\r\n        <div className=\"scroll-menu\">\r\n          <CategoriesList \r\n              categoriesData={categories} \r\n              categoryId={categoryIdPassed}\r\n              >\r\n          </CategoriesList>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <p className=\"page-subtitle\">Blog Posts</p>\r\n        </div>\r\n        <BlogList blogPosts={blogs} />\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}